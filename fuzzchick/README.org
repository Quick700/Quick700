
* Introduction

  Directory for testing FuzzChick.

* Installation

  Make sure you have the latest QuickChick submodule:

  #+BEGIN_SRC sh
    git pull
    git submodule update --init
  #+END_SRC

  In order to use FuzzChick you need the AFL instrumentation for ocaml:

  #+BEGIN_SRC sh
    opam switch create 4.04.0+afl
    eval `opam config env`
  #+END_SRC

  I believe this will set up an ocaml compiler which instruments
  binaries for AFL, and installs AFL via opam (not sure if the version
  from opam is special).

  You will need Coq, and some libraries for Coq as well.

  #+BEGIN_SRC sh
    opam repo add coq-released http://coq.inria.fr/opam/released
  #+END_SRC

  But that should be about it. After this FuzzChick should be
  relatively easy to install:

  #+BEGIN_SRC sh
    opam pin add QuickChick
  #+END_SRC

* How Does FuzzChick Work?

  Sounds like FuzzChick will compile tests as a binary tester, which
  it then runs AFL on. The binary tester will intentionally crash when
  the checker fails for a given test. There are some comments here:

  https://github.com/Quick700/Quick700/issues/5

* Running FuzzChick

  There is a [[./QuickChick/examples/fuzz-ifc][examples/fuzz-ifc]] directory in QuickChick that is related
  to FuzzChick. There are some comments for running this here:

  https://github.com/Quick700/Quick700/issues/5

  #+BEGIN_SRC sh
    cd QuickChick/examples/fuzz-ifc/
    mkdir output
    ./runtests.sh

    tail -f output/fuzz_seeded_SSNI_arbitrary_*.out
  #+END_SRC
