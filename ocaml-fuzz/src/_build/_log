### Starting build.
# Target: try.ml.depends, tags: { package(stdio, unix, base), extension:ml, file:try.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package 'stdio, unix, base' -modules try.ml > try.ml.depends
# Target: try.cmo, tags: { package(stdio, unix, base), byte, compile, extension:cmo, extension:ml, file:try.cmo, file:try.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package 'stdio, unix, base' -o try.cmo try.ml
+ ocamlfind ocamlc -c -package 'stdio, unix, base' -o try.cmo try.ml
File "try.ml", line 56, characters 2-14:
Warning 3: deprecated: Base.print_string
[2016-09] this element comes from the stdlib distributed with OCaml.
Use [Stdio.Out_channel.output_string Stdio.stdout] instead.
# Target: try.cmx, tags: { package(stdio, unix, base), compile, extension:cmx, extension:ml, file:try.cmx, file:try.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package 'stdio, unix, base' -o try.cmx try.ml
+ ocamlfind ocamlopt -c -package 'stdio, unix, base' -o try.cmx try.ml
File "try.ml", line 56, characters 2-14:
Warning 3: deprecated: Base.print_string
[2016-09] this element comes from the stdlib distributed with OCaml.
Use [Stdio.Out_channel.output_string Stdio.stdout] instead.
# Target: try.native, tags: { package(stdio, unix, base), dont_link_with, extension:native, file:try.native, link, native, ocaml, program, quiet, traverse }
ocamlfind ocamlopt -linkpkg -package 'stdio, unix, base' try.cmx -o try.native
# Compilation successful.
